---
name: CI

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "main"
      - "release"

jobs:
  build:
    name: build
    runs-on: ubuntu-22.04
    env:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}

    steps:
      - uses: actions/checkout@v5
      - name: make version
        run: |
          make version .env.docker
      - run: make ci-report
      - run: make build-docker-image
      - run: make build-in-docker
      - run: make validate-in-docker
      - name: upload packages
        uses: actions/upload-artifact@v5
        with:
          name: build
          path: build/**/*
      - name: make release-in-docker
        run: |
          if [[ "${GITHUB_REF#refs/heads/}" == "release" ]]; then
            export CI_BRANCH=${GITHUB_REF#refs/heads/}
            export PACKAGECLOUD_REPOSITORY=dokku/dokku
            rm .env.docker
            make .env.docker release-in-docker release-packagecloud-in-docker
          fi

  binary-check:
    name: binary-check
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v5
      - name: Get Repository Name
        id: repo-name
        run: |
          echo "REPOSITORY_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)" >> $GITHUB_OUTPUT
          echo "TARGET_ARCHITECTURE=$(dpkg --print-architecture)" >> $GITHUB_OUTPUT
          echo "GO_VERSION=$(go mod edit -json | jq -r .Go)" >> $GITHUB_OUTPUT
      - name: Build binaries
        uses: crazy-max/ghaction-xgo@v3
        with:
          xgo_version: latest
          go_version: "${{ steps.repo-name.outputs.GO_VERSION }}"
          dest: dist
          pkg: cmd
          prefix: ${{ steps.repo-name.outputs.REPOSITORY_NAME }}
          targets: linux/${{ steps.repo-name.outputs.TARGET_ARCHITECTURE }}
          v: true
          x: false
          race: false
          ldflags: -s -w -X main.Version=${{ github.ref_name }}
          buildmode: default
          trimpath: true
      - name: Check version
        run: |
          "dist/${{ steps.repo-name.outputs.REPOSITORY_NAME }}-linux-${{ steps.repo-name.outputs.TARGET_ARCHITECTURE }}" --version
